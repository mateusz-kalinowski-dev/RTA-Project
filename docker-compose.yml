
name: rta-project
services:
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest-ubi8
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    restart: on-failure

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest-ubi8
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    restart: on-failure

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: on-failure

  broker:
    build:
      context: ./broker
    image: broker:latest
    container_name: broker
    depends_on:
      - kafka
      - mongodb
    env_file: .env
    volumes:
      - ./consumer:/app
    restart: on-failure

  analyzer:
    image: analyzer:latest
    container_name: analyzer
    build:
      context: ./analyzer
    depends_on:
      - broker
    env_file: .env

    restart: on-failure

  consumer:
    build:
      context: ./consumer
    image: consumer:latest
    container_name: consumer
    depends_on:
      - analyzer
    env_file: .env
    volumes:
      - ./consumer:/app
    restart: on-failure
  
  api:
    container_name: api
    image: api:latest
    build:
      context: ./api
    ports:
      - "5000:5000"
    depends_on:
      - consumer
    env_file: .env
    restart: on-failure

volumes:
  mongodb_data: 